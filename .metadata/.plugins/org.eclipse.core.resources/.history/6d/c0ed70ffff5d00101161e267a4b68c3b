package mybatis.services.user.impl;

import java.util.List;

import org.apache.ibatis.session.SqlSession;

import mybatis.services.domain.User;
import mybatis.services.user.UserDAO;

//SqlSession을 주입한 의존성 객체로 작성
public class MyBatisUserDAOImpl12 implements UserDAO{
	
	private SqlSession sqlSession;
	private static final String NS = "UserMapper10.";
	
	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
		//선언하고 주입하고,, 이 두 코드로 인젝션이 끝이난다!
	
	@Override
	public int addUser(User user) throws Exception {
		int result = sqlSession.insert(NS+"addUser", user);
		sqlSession.commit();
		return result;
	}

	@Override
	public int removeUser(String userId) throws Exception {
		int deleteResult = sqlSession.delete(NS+"removeUser", userId);
		sqlSession.commit();
		return deleteResult;
	}
	
	/*
	//5.User03.removeUser Test
	int deleteResult = session.delete("UserMapper03.removeUser", user.getUserId());
	session.commit(); //이 부분 반드시 해줘야 한다.
	System.out.println(":: 5. removeUser(DELETE) result ? "+deleteResult);
	System.out.println("\n");
	*/
	
	/*
	 * @Override public int updateUser(User userId) throws Exception { int result =
	 * sqlSession.delete(NS+"removeUser", userId); sqlSession.commit(); return
	 * result; }
	 */
	@Override
	public int updateUser(User user) throws Exception {
	    int result = sqlSession.update(NS+"updateUser", user);  
	    sqlSession.commit();
	    return result;
	}

	@Override
	public User getUser(String userId) throws Exception {

		return sqlSession.selectOne(NS+"getUser", userId);
	}

	@Override
	public List<User> getUserList(User user) throws Exception {

		return sqlSession.selectList(NS+"getUserList", user);
	}

}
